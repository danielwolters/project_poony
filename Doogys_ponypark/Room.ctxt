#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "Pony\ park\ Slagharen"\ application.\ \r\n\ \ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ The\ exits\ are\ labelled\ north,\ \r\n\ east,\ south,\ west,\ omhoog,\ omlaag.\ \ For\ each\ direction,\ the\ room\ stores\ a\ reference\r\n\ to\ the\ neighboring\ room,\ or\ null\ if\ there\ is\ no\ exit\ in\ that\ direction.\r\n\ 'Room'\ Also\ stores\ if\ there\ is\ an\ Item\ in\ the\ room\ or\ wheter\ the\ Room\ is\ locked\ or\ not\ \r\n\ Also\ set\ the\ personges\ currently\ in\ the\ room\r\n\ \r\n\ @author\ \ Thomas\ de\ Bruin\ and\ Dani\u00EBl\ Wolters\r\n\ @version\ 23-01-2020\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=
comment10.target=java.lang.String\ getDescription()
comment10.text=\r\n\ @return\ The\ description\ of\ the\ room.\r\n
comment11.params=direction
comment11.target=Room\ getExit(java.lang.String)
comment11.text=\r\n\ @return\ returns\ a\ Room\ based\ on\ the\ exit\ String\ given\r\n\ @param\ a\ String\ with\ the\ direction\r\n
comment12.params=
comment12.target=java.lang.String\ getExitString()
comment12.text=\r\n\ Retouneer\ een\ string\ met\ daarin\ de\ uitgangen\ van\ de\ ruimte,\r\n\ bijvoorbeeld\ "Exits\:\ north\ west".\r\n\ @return\ Een\ omschrijving\ van\ de\ aanwezige\ uitgangen\ in\ de\r\n\ ruimte.\r\n
comment13.params=
comment13.target=java.lang.String\ getLongDescription()
comment13.text=\r\n\ Puts\ all\ the\ information\ of\ the\ room\ into\ a\ string\r\n\ like\ the\ Room\ omschrijving,\ exits\ and\ items\r\n\ @return\ the\ String\ containing\ the\ Room\ information\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExits(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ the\ exits\ of\ this\ room.\ \ Every\ direction\ either\ leads\r\n\ to\ another\ room\ or\ is\ null\ (no\ exit\ there).\r\n\ @param\ north\ The\ north\ exit.\r\n\ @param\ east\ The\ east\ east.\r\n\ @param\ south\ The\ south\ exit.\r\n\ @param\ west\ The\ west\ exit.\r\n
comment3.params=personage
comment3.target=void\ setPersonage(Personage)
comment3.text=\r\n\ Sets\ a\ Personage\ in\ the\ room\r\n\ @param\ the\ Personage\ the\ should\ be\ added\ to\ the\ Room\r\n
comment4.params=
comment4.target=Personage\ getPersonage()
comment4.text=\r\n\ Gets\ the\ Personage\ the\ is\ currently\ in\ the\ room\r\n\ @return\ return\ the\ Personage\ the\ is\ currently\ in\ the\ room\r\n
comment5.params=slot
comment5.target=void\ setSlot(boolean)
comment5.text=\r\n\ Sets\ the\ slot\ on\ a\ room\r\n\ @param\ 'true'\ if\ the\ Room\ should\ be\ locked\ 'false'\ otherwise\ \ \ \r\n
comment6.params=
comment6.target=boolean\ getSlot()
comment6.text=\r\n\ Gets\ the\ slot\ of\ the\ current\ Room\r\n\ @return\ return\ the\ slot\ of\ the\ current\ Room\r\n
comment7.params=item
comment7.target=void\ setItem(Item)
comment7.text=\r\n\ Set\ an\ Item\ to\ the\ Room\r\n\ @param\ The\ Item\ that\ should\ be\ added\ to\ the\ Room\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getRoomItem()
comment8.text=\r\n\ Gets\ the\ items\ that\ are\ currently\ in\ the\ room\r\n\ @return\ an\ ArrayList<Item>\ with\ the\ Item\ that\ are\ in\ the\ Room\r\n
comment9.params=
comment9.target=void\ removeItem()
comment9.text=\r\n\ Removes\ the\ Item\ that\ is\ in\ the\ Room\r\n
numComments=14
