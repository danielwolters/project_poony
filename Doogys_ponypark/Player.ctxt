#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ class\ Player\ -\ Creates\ a\ player\ and\ keeps\ track\ of\ the\ Room\ the\ Player\ is\ currently\ in\r\n\ Also\ keeps\ track\ of\ all\ the\ Rooms\ the\ player\ was\ previously\ in\r\n\ Also\ keeps\ track\ of\ all\ the\ Items\ the\ player\ gathered\r\n\ \r\n\r\n\ @author\ Thomas\ de\ Bruin\ and\ Dani\u00EBl\ Wolters\r\n\ @version\ 23-01-2020\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n\ Creates\ a\ new\ Player\r\n\ and\ creates\ a\ new\ ArrayList\ that\ can\ be\ filled\ with\ Rooms\r\n\ and\ creates\ a\ new\ Arraylist\ that\ can\ be\ filled\ with\ Items\r\n
comment10.params=room
comment10.target=void\ setCurrentRoom(Room)
comment10.text=\r\n\ Set\ the\ currentRoom\ of\ the\ Player\ to\ the\ room\ that\ is\ given\r\n\ @param\ the\ Room\ to\ which\ the\ currentRoom\ should\ be\ changed\r\n
comment11.params=
comment11.target=Room\ getCurrentRoom()
comment11.text=\r\n\ Gets\ the\ Room\ the\ player\ is\ currently\ in\r\n\ @return\ return\ currentRoom\ containing\ the\ Room\ the\ player\ is\ currently\ in\r\n
comment2.params=item
comment2.target=void\ addItem(Item)
comment2.text=\r\n\ Adds\ an\ Item\ to\ the\ ArrayList<Item>\r\n\ If\ there\ already\ is\ an\ Item\ in\ the\ ArrayList<Item>\r\n\ prints\:\ 'U\ kunt\ niet\ meer\ dan\ 1\ item\ in\ uw\ bagga\ stoppen'\r\n\ @param\ the\ Item\ the\ should\ be\ added\r\n
comment3.params=
comment3.target=java.lang.String\ getGoodieBaggaString()
comment3.text=\r\n\ Gets\ a\ String\ with\ the\ omschrijving\ of\ the\ Item\ currently\ in\ the\ ArrayList<Item>\r\n\ @return\ return\ a\ String\ with\ the\ omschrijving\ of\ the\ Item\ Currently\ in\ ArrayList<Item>\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getGoodieBagga()
comment4.text=\r\n\ Gets\ the\ ArrayList<Item>\r\n\ @return\ returns\ an\ ArrayList<Item>\ with\ Items\r\n
comment5.params=
comment5.target=boolean\ validGoodieBagga()
comment5.text=\r\n\ Check\ if\ the\ ArrayList<Item>\ is\ empty\ or\ not\r\n\ @return\ return\ false\ if\ the\ ArrayList<Item>\ is\ meaning\ its\ not\ valid\ else\ return\ true\ meaning\ there\ is\ a\r\n\ Item\ in\ the\ ArrayList<Item>\ thus\ being\ valid\r\n
comment6.params=
comment6.target=void\ inhoudGoodieBagga()
comment6.text=\r\n\ Checks\ if\ there\ is\ something\ inside\ goodieBagga\r\n\ prints\ 'er\ zit\ niks\ in\ je\ goodieBagga\ '\ if\ the\ ArrayList\ is\ empty\r\n\ prints\ 'Dit\ zit\ er\ in\ je\ goodieBagga'\ +\ the\ item\ omschrijving\ from\ the\ Item\ in\ the\ goodieBagga\r\n
comment7.params=
comment7.target=void\ dropItem()
comment7.text=\r\n\ Drops\ the\ Item\ currently\ in\ goodieBagga\r\n\ if\ the\ goodieBagga\ contains\ one\ or\ more\ Items\r\n\ check\ if\ the\ currentRoom\ already\ has\ an\ Item\r\n\ if\ so\ switch\ the\ Item\ of\ the\ CurrentRoom\ and\ the\ Item\ currently\ in\ GoodieBagga\r\n\ and\ prints\ and\ omschrijving\ of\ what\ you\ picked\ up\ and\ dropped\r\n\ if\ the\ currentRoom\ contains\ no\ Items\ drop\ the\ Item\ and\ prints\ the\ omschrijving\ of\ the\ Item\ dropped\r\n\ if\ you\ have\ no\ Item\ print'Je\ hebt\ niks\ om\ weg\ te\ gooien\ '\ \r\n
comment8.params=
comment8.target=void\ vorigeKamersToevoegen()
comment8.text=\r\n\ Add\ the\ currentRoom\ to\ the\ ArrayList<Room>\ vorigeKamers\r\n
comment9.params=
comment9.target=java.util.ArrayList\ getVorigeKamers()
comment9.text=\r\n\ gets\ the\ ArrayList<Room>\ vorigeKamers\ containing\ the\ rooms\ the\ player\ was\ previously\ in\r\n\ @return\ the\ ArrayList<Room>\ containing\ the\ rooms\ the\ player\ was\ previously\ in\r\n
numComments=12
